// Generated by typings
// Source: https://raw.githubusercontent.com/Tapad/typed-uuid/124824d2b96c1fed11b26bd4c2667e21d886bf44/v1.d.ts
declare module '~uuid/v1' {
function v1(options?: v1.UuidV1Options): string;
function v1(options: v1.UuidV1Options | undefined, buffer: Array<number>, offset?: number): Array<number>;
function v1(options: v1.UuidV1Options | undefined, buffer: Buffer, offset?: number): Buffer;

namespace v1 {
  export interface UuidV1Options {
    node?: any[];
    clockseq?: number;
    msecs?: number | Date;
    nsecs?: number;
  }
}

export = v1;
}
declare module 'uuid/v1' {
import main = require('~uuid/v1');
export = main;
}

// Generated by typings
// Source: https://raw.githubusercontent.com/Tapad/typed-uuid/124824d2b96c1fed11b26bd4c2667e21d886bf44/v4.d.ts
declare module '~uuid/v4' {
function v4(options?: v4.UuidV4Options): string;
function v4(options: v4.UuidV4Options | undefined, buffer: Array<number>, offset?: number): Array<number>;
function v4(options: v4.UuidV4Options | undefined, buffer: Buffer, offset?: number): Buffer;

namespace v4 {
  export type UuidV4Random = [number, number, number, number, number, number, number, number, number, number, number, number, number, number, number, number];
  export interface UuidV4Options {
    random?: UuidV4Random;
    rng?: () => UuidV4Random;
  }
}

export = v4;
}
declare module 'uuid/v4' {
import main = require('~uuid/v4');
export = main;
}

// Generated by typings
// Source: https://raw.githubusercontent.com/Tapad/typed-uuid/124824d2b96c1fed11b26bd4c2667e21d886bf44/index.d.ts
declare module 'uuid' {
import v1 = require('~uuid/v1');
import v4 = require('~uuid/v4');

export {
  v1,
  v4
}
}
